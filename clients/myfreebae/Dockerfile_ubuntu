FROM ubuntu:18.04

# Application parameters and variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000
ENV application_directory=/usr/src/app

RUN mkdir -p $application_directory

WORKDIR $application_directory

# Dependencies + NodeJS
RUN apt-get update && \
echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections && \
apt-get install -y software-properties-common &&\
apt-add-repository ppa:malteworld/ppa && apt-get update && apt-get install -y \
unzip \
locales \
gconf-service \
ca-certificates \
libnss3 \
lsb-release \
wget \
xvfb \
ffmpeg \
strace \
libicu-dev \
screen \
supervisor \
curl &&\
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &&\
echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list &&\
# Install Node
 curl --silent --location https://deb.nodesource.com/setup_8.x | bash - &&\
apt-get install --yes nodejs &&\
apt-get install --yes build-essential &&\
# Fonts
fc-cache -f -v
# It's a good idea to use dumb-init to help prevent zombie chrome processes.
ADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init
RUN chmod +x /usr/local/bin/dumb-init

#ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN mkdir -p /var/log/myfreebae/

RUN apt-get install nginx vim -y
#ADD nginx.conf /etc/nginx/sites-enabled/default
RUN apt-get install -y jq git python3 python3-pip python3-dev build-essential

RUN pip3 install --upgrade streamlink
# Cleanup
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Add user
RUN groupadd -r myfreebae && useradd -r -g myfreebae -G audio,video chaturbae

COPY package.json .

RUN npm install pino

COPY streamlink-plugins/myfreecams.py /root/.config/streamlink/plugins/myfreecams.py

# Bundle app source
COPY . .

RUN npm install

RUN npm install -g typescript nodemon

#&& mkdir -p /home/blessuser/Downloads
#&& chown -R blessuser:blessuser /home/blessuser \
#&& chown -R blessuser:blessuser $application_directory

# Run everything after as non-privileged user.
#USER blessuser

# Expose the web-socket and HTTP ports
#EXPOSE 3000
ENTRYPOINT ["dumb-init", "--"]
#CMD [ "node", "cb_client.js" ]
#RUN screen -dmS super /usr/bin/supervisord -n
# Install app dependencies

CMD bash entrypoint.sh
#CMD tail -f /dev/null
